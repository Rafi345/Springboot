pipeline {
    agent any

    environment {
        DOCKER_HUB_CREDENTIALS = 'docker-hub-id'   // Jenkins credentials ID
        DOCKER_IMAGE = 'rafi345/springboot-app:latest'
        KUBE_NAMESPACE = 'rafi'
        AWS_REGION = 'eu-west-3'                        // Your AWS region
        EKS_CLUSTER_NAME = 'batch4-team2-eks-cluster'   
        AWS_CRED_ID = 'aws-credentials'
    }

         stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/Rafi345/Springboot.git'
            }
        }

        stage('Build with Maven') {
            steps {
                sh 'mvn clean package -DskipTests'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh "docker build -t ${DOCKER_IMAGE} ."
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: "${DOCKER_HUB_CREDENTIALS}", usernameVariable: 'USER', passwordVariable: 'PASS')]) {
                    sh 'echo $PASS | docker login -u $USER --password-stdin'
                    sh "docker push ${DOCKER_IMAGE}"
                }
            }
        }

        
        stage('Configure kubectl for EKS') {
            steps {
                withCredentials([usernamePassword(credentialsId: "${AWS_CRED_ID}",
                                                 usernameVariable: 'AWS_ACCESS_KEY_ID',
                                                 passwordVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                    sh "aws eks --region ${AWS_REGION} update-kubeconfig --name ${EKS_CLUSTER_NAME}"
                    sh "kubectl config get-contexts"
                }
            }
        }

        stage('Deploy to EKS') {
            steps {
                script {
                    // Apply deployment and service YAML in your repo
                    sh "kubectl apply -f k8-deployment.yaml -n ${KUBE_NAMESPACE}"
                }
            }
        }
    }

    post {
        success {
            echo 'Spring Boot app deployed successfully to EKS!'
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}
